# 
#  This file is part of the FFEA simulation package
#  
#  Copyright (c) by the Theory and Development FFEA teams,
#  as they appear in the README.md file. 
# 
#  FFEA is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
# 
#  FFEA is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with FFEA.  If not, see <http://www.gnu.org/licenses/>.
# 
#  To help us fund FFEA development, we humbly ask that you cite 
#  the research papers on the package.
#

TUTORIAL - how to plot data in paraview:

OPEN
1) open VTK file
2) Apply

VIEW internal lines
1) Filters/Alphabetical/ExtractEdges
2) Apply

VIEW Force
1) Display/Color/Color by - force
2) View force vectors - Filters/Alphabetical/Glyph
3) Color Force vectors - Display/Color/Color by - GlyphVector

SELECT points in specific value range
1) View/Selection Inspector (now we continue in Selection inspector panel)
2) Create Selection
3) Selection Type: Trashold
4) Field Type: POINT
5) Create Selection
6) Now we can choose from scalar values, in this case scalar_force
7) Add Treshold
8) Change Lower and Upper boundaries
9) In Display Style you may change marks style of these points (add point ID or value) 

HOW TO MAKE VIDEO
1) Press Reset button (reset position of camera to the centre) - cross with arrows
2) File/Save Animation
3) Set
	* Fram rate - number of frames per second (for example 25)
	* Number of frames - total number of frames (for example 250 - 10 sec long video)
	* Resolution 
--------------------------------------------------------------------------------------------------------
|Final Display | Preview    | Aspect | Antialias | Antialias |                Usual Use                |
| Resolution   | Resolution | Ratio  |     2x    |     3x    |                                         |
|--------------|------------|--------|-----------|-----------|-----------------------------------------|
|   640x480    |  640x480   |   4:3  |  1280x960 | 1920x1440 | Small area on a PowerPoint slide        |
|   800x600    |  800x600   |   4:3  | 1600x1200 | 2400x1800 | Reasonable area on a PowerPoint Slide   |
|  1024x768    |  800x600   |   4:3  | 2048x1536 | 3072x2304 | Large area on a PowerPoint Slide        |
|  1280x720    |  800x450   |  16:9  | 2560x1440 | 3840x2160 | Small HD (High Definition)              |
|  1280x960    |  800x600   |   4:3  | 2560x1920 | 3840x2880 | High resolution PowerPoint              |
| 1400x1050    |  800x600   |   4:3  | 2800x2100 | 4200x3150 | Possible Full-Screen Conference Display |
| 1600x1200    |  800x600   |   4:3  | 3200x2400 | 4800x3600 | Full Screen Desktop                     |
| 1920x1080#   |  800x450   |  16:9  | 3840x2160 | 5760x3240 | Full HD (preferred Conference Display)  |
--------------------------------------------------------------------------------------------------------
 # Probably best to use this for your master frames, then crop/resize as needed for movies of other resolutions/aspect ratios.
 * Copy of table from: https://confluence.slac.stanford.edu/display/AdvComp/Choosing+Frame+Resolution
4) Files of type - Paraview don't produce usual video types, but alows produce sequece of pictures (.png, .jpg). 

** HOW TO MAKE VIDEO FROM PICTURES SEQUENCE **
1) use linux tool ffmpeg
	-i    = input file format %04d = 4 digits
	-f    = file format
	-b:v  = bitrate (https://en.wikipedia.org/wiki/Bit_rate#Video)
example:
	ffmpeg -i blob.%04d.png -f flv -b:v 15M out.flv

** ADVANCED ANIMATION SETTINGS **
1) View/Animation View
2) Here you may set Start and End time (useful for composition of more pictures sequence)
3) Possibility to set camera rotation around data (under TimeKeeper add Camera + Orbit)

In case of composing videos from sequences of pictures, use sequence.sh to produce one sequence form a number of smaller sequences. 
All sequences should be named the same, with the sequnce number (name1.0000.png, name1.0001.png, name2.0000.png, etc). Start indexing with 1.
Please watch help for more instructions.



 * Ondrej Vysocky
 * xvysoc01@stud.fit.vutbr.cz
 * EPCC, University of Edinburgh

